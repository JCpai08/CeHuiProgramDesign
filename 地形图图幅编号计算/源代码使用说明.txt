源代码使用说明：
	由于Github无法直接上传单个大于25MB的文件，我的Git也因未知原因无法使用，所以我把原项目的bin和obj文件夹删除使原项目文件夹小于25M才得以上传(这两个文件夹是在Visual Studio 2022中编译生成的，再次编译后就会出现)，但是由于我的后端是使用嵌入的Python解释器创造PythonRuntime环境运行PythonScripts文件夹里的Python程序实现，所以编译后仍需做一些Python三方包的安装工作软件才能正常使用。
	以下是完整步骤：
	1、点击*.sln后会自动在Visual Studio 2022打开该项目(因为软件是我在VS2022中编写的)，{F5}编译运行一下，弹出软件界面后{Shift}+{F5}终止运行。
	2、此时在文件管理中查看项目文件夹即可找到bin和obj文件夹，在生成的bin文件夹中沿着如下目录找到嵌入式Python解释器的位置"...\bin\Debug\PythonRuntime"，复制该文件地址。
	3、{Win}+{R}并键入"cmd"打开命令行窗口，先定位到该项目文件夹所处的盘符(比如我的项目在E盘的"E:\Project_WPF"文件夹下则我应该键入"E:"并回车)，再使用cd指令定位到嵌入式Python解释器所在的文件夹。
	4、回到文件资源管理器，在PythonRuntime文件夹中，创建"Lib"文件夹并接着在其中创建"site-packages"文件夹(因为我在python39._pth文件中指定的Py三方包地址是"Lib\site-packages")。
	5、继续在cmd中键入"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py"将pip安装脚本下载并定位到此处。
	6、继续键入".\python.exe get-pip.py --target=Lib\site-packages --no-cache-dir"以安装pip到嵌入式环境的Lib\site-packages目录中。
	7、最后安装Py三方包，依次运行指令"Python.exe -m pip install numpy"、"Python.exe -m pip install pandas"、"Python.exe -m pip install openpyxl"。
	8、此时回到Visual Studio 2022即可正常运行并使用该软件的全部功能，也可以将bin文件夹下的Debug文件夹整个剥离出来后点击文件夹内的*.exe文件直接运行该软件。
